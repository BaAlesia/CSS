1994 - CSS
Хокон Виум Ли (из Норвегии) предложил концепцию каскадных таблиц стилей.
Способы подключения CSS:

В head HTML-документа нужно добавить link со ссылкой на файл .css:
<link rel="stylesheet" href="style.css">

В head HTML-документа нужно добавить тэг “style”:
<style>
 .example {
  background: #ebac0c;
 }
</style>

Через атрибут “style”
Чтобы стилизовать конкретный элемент, можно использовать атрибут “style”:

<div style="border: 1px solid #000; margin-top: 16px;">Див со стилем</div>
Синтаксис внутри атрибута совпадает с синтаксисом внутри фигурных скобок в селекторе CSS.

Синтаксис CSS
Синтаксис CSS состоит из двух частей: селекторы и свойства. Селекторами мы указываем элементы, а свойствами описываем их стиль.

Селекторы
Селектор это правило, по которому будут выбраны элементы — например, мы можем обратиться ко всем параграфам или картинкам. Как?

p {} img {}
Свойства
Свойства пишутся у конкретных селекторов между фигурными скобками в формате ключ: значение.

Сложно? Вот пример как сделать у всех параграфов красный цвет и подчёркивание:

p {
 color: red;
 text-decoration: underline;
}
Каждое новое свойство пишется с новой строки.

После каждого свойства необходимо ставить точку с зяпятой.
Синтаксис CSS: практика
Всё гениальное - просто. Чем проще инструмент, тем более он удобен и прекрасен. CSS - один из таких инструментов. 
Его синтакисис состоит всего из двух единиц: селекторы и свойства.

Простые селекторы
HTML-документ состоит из элементов (чем элементы отличаются от тегов, мы рассказали в этом уроке). Чтобы задать стили элементу, необходимо к нему обратиться - «выбрать» его.

Давай посмотрим на примере:

<p>Привет, о многоуважаемый ученик!</p>
p {
    color: red;
}

Что мы сделали? Мы раскрасили текст "Привет, о многоуважаемый ученик!" в красный цвет. Как мы это сделали? 
Мы обратились ко всем элементам <p> и задали им красный цвет текста. Такой селектор называется селектор по тегу.
Селекторы не всегда такие простые, в следующих шагах мы рассмотрим разные виды селекторов. В общем виде синтаксис можно представить следующим образом:
селектор {
 свойство: значение;
}

Типы селекторов
Это основные типы селекторов. Есть и более сложные, но их очень редко используют даже опытные разработчики. Потому что один из главных принципов в написании кода - KISS.

Каждый селектор имеет свою специфичность – если стили в разных селекторах будут конфликтовать, применятся они будут в порядке специфичности – от более специфичному к менее специфичному.

Подробнее об этом на MDN: https://developer.mozilla.org/ru/docs/Web/CSS/Specificity

По тегу
Самый простой селектор - выбирает элементы по их тегу:

h1 {
   /* стили для всех h1 */
}
Этот селектор выберет все элементы <h1>.

По классу
Самый часто используемый селектор — по классу. Задаём в HTML класс элементам, к которым применить стиль:
<div class="card">
 Карточка
</div>
И теперь эти элементы можно выбрать по имени класса. Имя селектора начинается с точки:
.card {
   /* стили для всех элементов с class="card" */
   background: #333; /* фон серого цвета */
}
По id
Задавать стили по id - дурной тон, старайся его избегать. Тут всё тоже самое, что и с классом, только атрибут называется id:
<button id="button-go-to-top">
 Наверх
</button>
И имя селектора начинается с решётки:

#button-go-to-top {
   /* стили для элемента с id="button-go-to-top" */
   text-decoration: underline; /* подчёркивание текста */
}
По атрибуту 
Не самый популярный селектор, но иногда он полезен:
<button data-my-custom-attribute="my-custom-value">
 Нажми на меня
</button>
 Имя и значение атрибута пишется в квадратных скобках. Работает с любым атрибутом:
[data-my-custom-attribute="my-custom-value"] {
   color: red;
}
Любой элемент
Селектор * выбирает абсолютно любой элемент. Самый непопулярный селектор, обычно используется для костылей. 
Вряд ли он будет часто тебе нужен. Просто знай, что он есть.
* {
  margin: 0;
}
/* абсолютно всем элементам будет установлен margin: 0 */

Составные селекторы
Составные селекторы состоят из комбинации простых.

Группировка селекторов
Один и тот же набор свойств можно применить к разным селекторам. Пример:

button,
.button,
.cta-button {}

Нужно просто указать  через запятую все селекторы, к которым ты хочешь применить стили.
Элемент с классом
Можно стилизовать конкретный элемент, если у него есть определённый класс. Примеры:

p.example {}
Селектор выберет все p, у которых есть класс example.
.main.active {}
Селектор выберет все элементы с классом main, у которых также есть и класс active. Пример такого элемента:
<div class="main active">Пример</div>


